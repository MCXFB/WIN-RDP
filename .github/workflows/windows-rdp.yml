name: Free Windows RDP

on: workflow_dispatch  # Manual trigger only

jobs:
  free-rdp:
    runs-on: windows-latest
    timeout-minutes: 360  # 6h max (GitHub Free limit)

    steps:
    - name: Setup ngrok (Free)
      shell: powershell
      run: |
        # Download ngrok v3 (free version)
        Invoke-WebRequest "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Authenticate ngrok
      shell: powershell
      run: |
        .\ngrok\ngrok.exe config add-authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Configure Temporary Access
      shell: powershell
      run: |
        # Enable RDP temporarily
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

        # Create disposable credentials
        $password = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 12 | % {[char]$_})
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString $password -AsPlainText -Force)
        Write-Host "::add-mask::$password"
        Write-Host "Temporary password: ***"

    - name: Start ngrok tunnel
      shell: powershell
      run: |
        Start-Process -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389"
        Start-Sleep -Seconds 30
        
        # Get tunnel URL from logs
        $logContent = Get-Content "$pwd/ngrok.log" -Tail 200
        $publicUrl = ($logContent | Select-String "url=tcp://(.+)" | % {$_.Matches.Groups[1].Value})[-1]
        Write-Host "::add-mask::$publicUrl"
        Write-Host "Connection URL: ***"

    - name: Maintain session
      shell: powershell
      run: |
        try {
            while ($true) {
                Write-Host "Session active: $(Get-Date -Format 'HH:mm:ss')"
                Start-Sleep -Seconds 300
            }
        }
        finally {
            Write-Host "Cleaning up..."
            Get-Process ngrok -ErrorAction SilentlyContinue | Stop-Process -Force
        }
