name: Windows RDP Tunnel (Fixed API Check)

on: workflow_dispatch

jobs:
  expose-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Setup ngrok
      shell: powershell
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Authenticate ngrok
      shell: powershell
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Start ngrok tunnel with logging
      shell: powershell
      run: |
        # Start ngrok with logging
        $ngrokProcess = Start-Process -FilePath .\ngrok\ngrok.exe -PassThru -ArgumentList "tcp 3389 --log=stdout"
        
        # Wait for API to become available
        $retryCount = 0
        while ($retryCount -lt 10) {
            try {
                $tunnels = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels -ErrorAction Stop
                $publicUrl = $tunnels.tunnels[0].public_url
                Write-Host "RDP URL: $publicUrl"
                break
            }
            catch {
                Write-Host "Waiting for ngrok API... ($retryCount/10)"
                Start-Sleep -Seconds 5
                $retryCount++
            }
        }
        
        if (-not $publicUrl) {
            Write-Host "::error::Failed to get ngrok URL"
            exit 1
        }
        
        # Keep process running
        $ngrokProcess.WaitForExit()

    - name: Keep alive
      shell: powershell
      run: while ($true) { Start-Sleep -Seconds 60 }
