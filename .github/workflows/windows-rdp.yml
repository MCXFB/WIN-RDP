name: Windows RDP Tunnel (Free Tier)

on: workflow_dispatch  # Manual trigger only

jobs:
  expose-rdp:
    runs-on: windows-latest
    timeout-minutes: 360  # 6 hours max for Free tier

    steps:
    - name: Setup ngrok
      shell: powershell
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok
        $env:PATH += ";$pwd\ngrok"

    - name: Authenticate ngrok
      shell: powershell
      run: ngrok authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Configure RDP Access
      shell: powershell
      run: |
        # Enable Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        
        # Create temporary credentials
        $password = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 32 | % {[char]$_})
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString $password -AsPlainText -Force)
        Write-Host "::add-mask::$password"
        Write-Host "Generated password: $password"

    - name: Start ngrok tunnel
      shell: powershell
      run: |
        Start-Process ngrok -ArgumentList "tcp 3389 --log=stdout"
        Start-Sleep -Seconds 30  # Wait for tunnel establishment
        
        $tunnels = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels
        $rdpUrl = $tunnels.tunnels[0].public_url
        Write-Host "::add-mask::$rdpUrl"
        Write-Host "RDP Access: $rdpUrl"
        Write-Host "Use credentials: runneradmin | $password"

    - name: Keep alive
      shell: powershell
      run: |
        while ($true) {
          Write-Host "Runner active - $(Get-Date -Format 'HH:mm:ss')"
          Start-Sleep -Seconds 300  # 5 minute intervals
        }
