name: Windows RDP Tunnel (Robust Version)

on: workflow_dispatch

jobs:
  expose-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Setup ngrok
      shell: powershell
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Authenticate ngrok
      shell: powershell
      run: |
        .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        if (-not $?) { exit 1 }
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Start ngrok with verbose logging
      shell: powershell
      run: |
        # Start ngrok in foreground with detailed logging
        $job = Start-Job -ScriptBlock {
            .\ngrok\ngrok.exe tcp 3389 --log=stdout --log-level=debug
        }
        
        # Extended retry logic with status checks
        $maxRetries = 15
        $retryInterval = 10
        $connected = $false
        
        for ($i = 0; $i -lt $maxRetries; $i++) {
            try {
                $status = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels -ErrorAction Stop
                if ($status.tunnels.Count -gt 0) {
                    $publicUrl = $status.tunnels[0].public_url
                    Write-Host "RDP URL: $publicUrl"
                    $connected = $true
                    break
                }
            }
            catch {
                Write-Host "Attempt $($i+1)/$maxRetries - Waiting for ngrok API..."
                Receive-Job $job  # Show ngrok logs
            }
            Start-Sleep -Seconds $retryInterval
        }

        if (-not $connected) {
            Write-Host "::error::Ngrok failed to start. Possible reasons:"
            Write-Host "1. GitHub network restrictions"
            Write-Host "2. Port 4040 blocked"
            Write-Host "3. Ngrok authentication failure"
            Write-Host "4. Antivirus blocking"
            exit 1
        }

    - name: Maintain connection
      shell: powershell
      run: |
        try {
            while ($true) {
                Write-Host "::warning::Connection active - $(Get-Date -Format 'HH:mm:ss')"
                Start-Sleep -Seconds 300
            }
        }
        finally {
            Write-Host "::warning::Cleaning up..."
            Get-Process ngrok | Stop-Process -Force
        }
